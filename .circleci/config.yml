version: 2.1

jobs:
#   start-docker:
#     working_directory: ~/repo
#     machine: 
#       image: ubuntu-2004:202010-01
#     steps:
#       - checkout
#       - run:
#           name: Start docker
#           command: docker-compose up -d
  Build:
    working_directory: ~/repo
    docker:
      - image: cimg/openjdk:11.0
    steps:
      - checkout
      - run:
          name: Build
          command: mvn -B -DskipTests clean package

  Tests:
    working_directory: ~/repo
    docker:
      - image: cimg/openjdk:11.0
    steps:
      - checkout
      - run:
          name: Install Docker-Compose
          command: sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
      - run:
          name: Adding permissions
          command: sudo chmod +x /usr/local/bin/docker-compose
      - run:
          name: Run Docker-Compose
          command: docker-compose -f docker-compose.yml up -d
          
      - run:
          name: Test
          command: mvn test

  Deploy-in-develop:
    docker:
      - image: cimg/openjdk:11.0

    steps:
      - checkout
   
  Deploy-in-staging:
    docker:
      - image: cimg/openjdk:11.0

    steps:
      - checkout

  Deploy-in-production:
    docker:
      - image: cimg/openjdk:11.0

    steps:
      - checkout

workflows:
  version: 2
  Build-Test-Deploy:
    jobs:
#     - start-docker
      - Build
      - Tests:
          requires:
            - Build

      - hold:
          type: approval
          requires:
            - Tests
          filters:
            branches:
              only: main
          
      - Deploy-in-develop:
          requires:
            - Tests
            - Build
          filters:
            branches:
              only: develop
              ignore: /pull\/.*/
       
      - Deploy-in-staging:
          requires:
            - Tests
            - Build
          filters:
            branches:
              only: /release\/.*/
              ignore: /pull\/.*/

      - Deploy-in-production:
          requires:
            - Build
            - Tests
            - hold
          filters:
            branches:
              only: main
              ignore: /pull\/.*/
